// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// prisma migrate dev - migrate to dev branch

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Project {
  id          Int             @id @default(autoincrement())
  title       String
  description String
  status      Status          @default(OPEN)
  createdAt   DateTime        @default(now())
  createdUser Int             @default(0)
  updatedAt   DateTime        @updatedAt
  updatedUser Int             @default(0)
  users       ProjectOnUser[]
}

model ProjectOnUser {
  Project   Project? @relation(fields: [projectId], references: [id])
  projectId Int
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int

  @@id([projectId, userId])
}

model Issue {
  id          Int           @id @default(autoincrement())
  title       String        @db.VarChar(255) //varchar(191)
  description String        @db.Text()
  status      Status        @default(OPEN)
  createdAt   DateTime      @default(now())
  createdUser Int           @default(0)
  updatedAt   DateTime      @updatedAt
  updatedUser Int           @default(0)
  users       IssueOnUser[]
}

model IssueOnUser {
  issue   Issue? @relation(fields: [issueId], references: [id])
  issueId Int
  user    User?  @relation(fields: [userId], references: [id])
  userId  Int

  @@id([issueId, userId])
}

enum Status {
  OPEN
  IN_PROGRESS
  TESTING
  CLOSED
}

model User {
  id        Int             @id @default(autoincrement())
  fullname  String
  email     String          @unique
  password  String
  createdAt DateTime        @default(now())
  updatedAt DateTime        @updatedAt
  role      Role?           @relation(fields: [roleId], references: [id])
  roleId    Int?
  issues    IssueOnUser[]
  projects  ProjectOnUser[]
}

model Role {
  id    Int    @id @default(autoincrement())
  name  String
  users User[]
}
